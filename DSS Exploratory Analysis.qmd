---
title: "Interim Report: Demographic Snapshot Update of DSS"
author: 
  - name: "Marianna Pekar"
    affiliation: "Victoria University of Wellington"
date: "today"
execute:
  echo: false
  warning: false  # Suppress warnings globally
format:
  html:
    code-fold: true
    toc: true
    link-external-newwindow: true
    self-contained: false  # Change to false for Shiny
    theme: 
      light: flatly
      dark: darkly
bibliography: references.bib
csl: apa.csl
---
The data displayed are not final and may be revised. 
For Discussion purposes only.
---



# IDI Disclaimer

These results are not official statistics. They have been created for research purposes from the Integrated Data Infrastructure (IDI) and Longitudinal Business Database (LBD) which are carefully managed by Stats NZ. For more information about the IDI, please visit [Stats NZ](https://www.stats.govt.nz/integrated-data/).

Access to the data used in this study was provided by Stats NZ under conditions designed to give effect to the security and confidentiality provisions of the Data and Statistics Act 2022. The results presented in this study are the work of the author, not Stats NZ or individual data suppliers.

The results are based in part on tax data supplied by Inland Revenue to Stats NZ under the Tax Administration Act 1994 for statistical purposes. Any discussion of data limitations or weaknesses is in the context of using the IDI for statistical purposes and is not related to the data’s ability to support Inland Revenue’s core operational requirements.

---
# Purpose

The purpose of this research is to investigate the characteristics and outcomes of individuals receiving Disability Support Services (DSS) in New Zealand, with a focus on the most recent data available in the Integrated Data Infrastructure (IDI).

This exploratory study aims to analyse the impact of demographic changes within the DSS client population on the flow through these services and provide actionable insights for policy development and service design.

This study also provides an initial first step to design consecutive data extracts from IDI, help formulating and testing hypotheses, and research questions for consecutive study. It may also serve the purpose to ideate research into designing operational algorithms that can help better serve the DSS population of New Zealand.

# Background

This research is a continuation of an original project that focused on the 2018 Census year, commissioned and managed by the Social Investment Agency (SIA).
Approximately 43,000 people received DSS from Whaikaha between January 1, 2022, and November 16, 2022 [@Whaikaha2023]. The analysis spans a decade, from 2011 to 2021, to capture comprehensive dynamics of this population. It is constrained by the data availability inside IDI, i.e. the latest available data to determine DSS receipt is 31st Mar 2021 as of now.

The project employed descriptive analysis and some advanced statistical techniques, including stock and flow modeling to understand the movement of clients through the DSS system and identify factors influencing service engagement and disengagement.
Key objectives include determining the profiles and pathways of DSS recipients, projecting future service needs, and informing policymakers on resource allocation and service enhancements. By examining reasons for service cessation, such as life transitions like aging or leaving school, this research will provide critical insights for developing more effective and responsive DSS interventions.

Overall, the insights gained from this analysis can guide strategic planning, policy innovation, and service design, ultimately aiming to enhance the well-being of New Zealand’s disabled population.

---

# Phase 1 – Descriptive Statistics

## Description of SIA Codes

The foundational project completed by SIA was part of the Disability Data and Evidence Working Group, chaired by Whaikaha, which is working on ways to improve the collection of data and statistics on disabled people. The SIA codes were created to systematically categorise and track the various services provided under DSS in New Zealand. These codes were designed to provide a one-off snapshot analsyis in 2018 to identifying and analysing the range of services available to individuals with disabilities.

The creation of SIA codes was a collaborative effort involving government agencies, service providers, and representatives from the disabled community, ensuring practical, inclusive, and reflective codes.

### Technical Details

#### Population

The research targets all disabled New Zealanders, estimated at 1.2 million people, including subgroups such as tāngata whaikaha Māori, disabled children, and those receiving support services, particularly from Whaikaha.The analysis separately identified DSS clients as well as disabled people not receiving DSS.  

#### Variables

Two broad data categories are used:

1. **Identifying Disabled People and Their Needs**:
    - Functional impairments and conditions
    - Receipt of support services
    - Eligibility or need indicators

2. **Describing Wellbeing Outcomes**:
    - Survey data (e.g., General Social Survey)
    - Administrative data (education, economic participation, health, and crime)

#### Methods

The research employs various methodologies:

- **Descriptive Analysis**: Identifying groups receiving services and those with needs.
- **Propensity Score Matching**: Examining DSS impact by constructing comparison groups.
- **Statistical Modeling**: Establishing relationships between various factors and outcomes.
- **Longitudinal Analysis**: Tracking disabled people over time to estimate economic costs.

These methods aim to meet project objectives and answer core research questions on DSS characteristics and outcomes.

#### Outputs

The project produced insights applicable to large parts of the disabled population, including:

- Aggregated profiles
- Statistical summaries
- Subgroup comparisons
- Time series data
- Demographic segmentation
- Projections and forecasts

These outputs were confidentialised to ensure compliance with confidentiality requirements.

SIA published a short guidance: [Te Atatū: Developing an indicator of disability](https://sia.govt.nz/publications/Te-Atatu-Developing-an-indicator-of-disability)

SIA also made codes about functional disability public on its GitHub page: [Multi-source indicator of functional disability](https://github.com/nz-social-investment-agency/definitions_library/blob/main/people/functional_disability.sql)

### Demographic Data Update

The following steps were taken to assess and update the codes produced by SIA:

- Data preparation
- Analysing the codes shared by SIA
- Running updated descriptive statistics
- Rolling forward population to the latest available year
- Updating all variables and data assembly to the latest available year
- Documenting the steps to roll forward the analysis and automate doing so
- Creating and validating results

---

## Analysis Results

### Changes in Population Age Distribution

Bimodal distribution with two peaks around the ages 9-13 and 57-63. The first peak shows growth from 2014, which speeds up after 2019. During the 2010-2021 period, the count of population in their early teens (9-13) increases from 3414 to 6633, i.e., by 94.29%. However, the age group displaying the highest growth rate over the period are those aged 70 and over.

```{r setup, echo=FALSE, include=FALSE}
# Setting Working Directory and Loading Packages and Data

library(dplyr)
library(ggplot2)
library(readxl)
library(tidyr)
library(gganimate)
#library(gifski)
library(ggrepel)
library(writexl)
library(png)
library(shiny)

# Loading descriptive statistics data form 2018 and 2021

#setwd("C:/Users/maria/OneDrive/Documents/DSS Analysis")

data_2021 <- read_excel("manawanui_output1_total_for_release.xlsx", sheet = "2021 confidentialised data")
data_2018 <- read_excel("manawanui_output1_total_for_release.xlsx", sheet = "2018 confidentialised")
region_data <- read_excel("manawanui_output1_total_for_release.xlsx", sheet = "Region_data")
ta_data <- read_excel("manawanui_output1_total_for_release.xlsx", sheet = "TA_data")

head(data_2021)
head(data_2018)
head(region_data)
head(ta_data)

# Adjusted function to clean 'n' column only
clean_transition_data <- function(df) {
  df %>%
    mutate(n = replace(n, n == "S", "0"),    # Replace "S" with "0" in column 'n'
           n = as.numeric(n))                # Convert column 'n' to numeric
}

# Update population group name in 2018 data
data_2018$pop_group <- ifelse(data_2018$pop_group == "DSS in 2018", "DSS in Given Year", data_2018$pop_group)

# Clean data
data_2018 <- clean_transition_data(data_2018)
data_2021 <- clean_transition_data(data_2021)

# Merge datasets
merged_data <- bind_rows(data_2021, data_2018)

# View the first few rows of the merged data
head(merged_data)
```


```{r setup2, echo=FALSE}

# Loading Age Distribution Data

# Function to clean transition counts data
clean_transition_data <- function(df) {
  df %>%
    mutate(across(-age, ~ replace(., . == "S", 0))) %>%
    mutate(across(-age, as.numeric))
}

# Read the data
data <- read_excel("C:/Users/maria/OneDrive/Asztali gép/Work/Manawanui/Markov Chain codes/Age distribution 2010-21_conf.xlsx", sheet = "Age distribution conf")

# Clean the data
data <- clean_transition_data(data)

# Reshape the data for plotting
data_long <- data %>%
  gather(key = "Year", value = "Count", -age)

# Define the colours for the groups
colors <- c("2010-2013" = "#4A1532", "2014-2018" = "#00cfe8", "2019-2021" = "#ff006e")

# Group the data by the defined periods
data_long <- data_long %>%
  mutate(Period = case_when(
    Year >= 2010 & Year <= 2013 ~ "2010-2013",
    Year >= 2014 & Year <= 2018 ~ "2014-2018",
    Year >= 2019 & Year <= 2021 ~ "2019-2021"
  ))

# Plotting Function
add_peak_labels <- function(plot, data) {
  data_peaks <- data %>%
    group_by(Year, Period) %>%
    summarise(
      Peak_0_30_Age = age[which.max(Count * (age <= 30))],
      Peak_0_30_Count = max(Count * (age <= 30)),
      Peak_31_90_Age = age[which.max(Count * (age > 30 & age <= 90))],
      Peak_31_90_Count = max(Count * (age > 30 & age <= 90))
    ) %>%
    gather(key = "Range", value = "Peak_Age", Peak_0_30_Age, Peak_31_90_Age) %>%
    gather(key = "Count_Range", value = "Peak_Count", Peak_0_30_Count, Peak_31_90_Count) %>%
    filter(substr(Range, 6, 7) == substr(Count_Range, 6, 7)) %>%
    select(Year, Period, Peak_Age, Peak_Count)
  
  plot + 
    geom_text_repel(data = data_peaks, aes(x = Peak_Age, y = Peak_Count, label = Peak_Age, color = Period), nudge_y = 50, size = 4)
}

```


```{r age-dist-plot, echo=FALSE}
# Exploratory Data Analysis

## Age Distribution Over Time

p <- ggplot(data_long, aes(x = age, y = Count, group = Year, color = Period)) +
  geom_line(size = 2) +
  scale_color_manual(values = colors, labels = c("2010-2013", "2014-2018", "2019-2021")) +
  labs(title = "Age Distribution Over Time",
       x = "Age",
       y = "Count",
       color = "Period") +
  theme_minimal(base_size = 15) +
  theme(plot.title = element_text(size = 20, face = "bold")) +
  scale_x_continuous(limits = c(0, 90))

# Simplify the animation step and specify the full path for the GIF file
# output_gif <- "age_distribution_animation.gif"
# animate(p + transition_states(Year, transition_length = 2, state_length = 1) + labs(title = "Age Distribution Over Time: {closest_state}"), 
#         width = 800, height = 600, renderer = gifski_renderer(output_gif))

```

![Age Distribution Over Time](age_distribution_animation.gif)

![Year-to-year Changes in Age Distribution](year_to_year_changes_animation.gif) 

```{r line-plot, echo=FALSE, include=FALSE}
# Create age groups
data$age_group <- cut(data$age,
                      breaks = c(0, 4, 12, 17, 24, 44, 64, Inf),
                      labels = c("Age 0-04", "Age 05-12", "Age 13-17", "Age 18-24", 
                                 "Age 25-44", "Age 45-64", "Age 65+"),
                      right = TRUE)

colors <- c("Age 0-04" = "#4A1532", "Age 05-12" = "#00cfe8", "Age 13-17" = "#ff006e",
            "Age 18-24" = "#f95d6a", "Age 25-44" = "#ffa600", "Age 45-64" = "#bc5090",
            "Age 65+" = "#003f5c")

# Reshape data
data_long <- data %>% 
  pivot_longer(cols = -c(age, age_group), names_to = "year", values_to = "count") %>%
  group_by(year, age_group) %>%
  summarise(total_count = sum(count), .groups = "drop")

data_long$year <- as.integer(as.character(data_long$year))

# Create the line plot
line_plot <- ggplot(data_long, aes(x = year, y = total_count, group = age_group, color = age_group)) +
  geom_line(size = 1.5) +
  geom_point(size = 3, shape = 21, aes(fill = age_group), color = NA) +  # Use NA for outer color to only show fill
  scale_color_manual(values = colors) +  # Set line colors
  scale_fill_manual(values = colors) +  # Set fill colors for points
  labs(title = "Population Distribution by Age Group",
       subtitle = "Dynamic view over years",
       x = "Year", y = "Total Population", color = "Age Group", fill = "Age Group") +
  theme_minimal() +
  theme(plot.title = element_text(size = 20, face = "bold"),
        legend.position = "bottom",
        axis.text.x = element_text(angle = 45, hjust = 1))

# Print the plot to check it displays correctly
print(line_plot)
```

```{r percentage-plot, echo=FALSE, include=FALSE}
# Prepare the data with percentages
percentage_data <- data_long %>%
  group_by(year) %>%
  mutate(percentage = total_count / sum(total_count) * 100) %>%
  ungroup()

# Create the line plot for percentages
percentage_plot <- ggplot(percentage_data, aes(x = year, y = percentage, group = age_group, color = age_group)) +
  geom_line(size = 1.5) +
  geom_point(size = 3, shape = 21, fill = aes(color = age_group), color = NA) +  # Fill points with line color
  scale_color_manual(values = colors) +
  labs(title = "Population Distribution by Age Group (Percentages)",
       subtitle = "Dynamic view over years",
       x = "Year", y = "Percentage of Total Population", color = "Age Group") +
  theme_minimal() +
  theme(plot.title = element_text(size = 20, face = "bold"),
        legend.position = "bottom",
        axis.text.x = element_text(angle = 45, hjust = 1))

print(percentage_plot)
```


:::{.panel-tabset}

```{r results='asis', echo=FALSE, warning=FALSE}
# Define the plots and their titles
plot_list <- list(p, line_plot, percentage_plot)
headings <- c("Age Distribution Over Time", "Population Distribution by Age Group", "Population Distribution by Age Group (Percentages)")

# Use a loop to generate the headings and insert plots
for (i in seq_along(plot_list)) {
  cat("### ", headings[i], "\n\n")
  print(plot_list[[i]])
  cat('\n\n')
}
```
:::

### Analysis of the Bimodal Distribution

- **Younger Age Group Dynamics**: The first peak typically seen in the younger age groups (ages 3 to 13) has shown a pronounced and rapid growth over the years, notably increasing its count dramatically. For instance, the population at age 9 in 2010 was 732, which surged to 1323 by 2021. This rapid increase suggests a growing prevalence or diagnosis of disabilities in younger children, potentially due to better healthcare screening, more widely available diagnostic services, or an actual increase in cases.
  
- **Transition Challenges**: A dip in population counts is typically observed around ages 14 to 16, where there appears to be a decrease before the counts begin to increase again in mid-life. This pattern could be indicative of several factors, including transitions from child to adult disability support services, changes in eligibility criteria, or even mortality rates that might be higher in this group due to severe disabilities. Investigating the reasons behind this dip is crucial as it may reveal gaps in services or support during critical life transitions. Understanding when and why disabled youth drop off from DSS can help in addressing potential shortfalls in the continuity of care and support systems.
  
- **Mid-life Age Group Dynamics**: The second peak, traditionally seen in mid-life (ages 57 to 63), indicates a slower change over time compared to the younger group. The count at age 57 was 471 in 2012 and slightly increased to 543 by 2020. This relatively stable but slightly increasing trend could relate to new disabilities acquired in adulthood due to aging, lifestyle diseases, accidents, or other health issues that emerge later in life.
  
- **65+ Population Dynamics**: Despite the apparent client count peak around the age of 9-13 rapidly growing over the period in focus, the group experiencing the largest percentage increase are the oldest group. The growth in the eldest population suggests an urgent need for expanding and adapting services that cater to aging individuals with disabilities. This includes long-term care options, age-appropriate medical interventions, and social support systems that can manage the complexities of aging with a disability.

### Trends Over Time

The age group 0-4 shows a slight decline in its proportion of the total population until 2016, starting just below 3% and tapering to slightly above 3% by 2021, indicating a relative stability with a slight increase towards the end of the period.

The age group 5-12 starts around 18% in 2010 and staying relatively stable until 2015. It shows a substantial increase afterwards, especially after 2017, suggesting a growing younger population. It peaks at 24% in 2021.

The teenage group, 13-17, begins at about 10.7% and grows to 13.4% by 2021, reflecting an increase in the teenage demographic. Similarly to the younger age group, the growth of this population’s proportion increases at a higher rate after 2017.

Young adults aged 18-24 maintain a relatively stable, but slightly increasing share of around 10%-12% throughout the decade.

The substantial demographic, 25-44 years, decreases slightly from 21% to around 18% by 2021. During this time, the population of this age group has increased, but not as substantially as for the 5-17 year age groups.

Adults aged 45-64 constitute the largest segment, starting at over 30% in 2010 and experiencing a noticeable decline to about 21.6% by 2021. The number of DSS clients in this age group have increased since 2012, but to a lesser extent than the younger groups.

The senior group, 65 and above, shows an increase in population numbers, reinforcing the trend of an aging population. However, this increase of the share of this population within DSS population is not continuous: since 2014, when it reached 9.28%, the share of this population has been declining despite of growing numbers.

#### Significance of Trends

The increase in the proportion of younger age groups (5-12 and 13-17) could be reflective of many contributing factors. Considering the decline of birth rates in previous years, it could be rather due to an influx of younger populations through migration, increasing diagnosis rates, increasing prevalence rates or changes in DSS eligibility criteria. It would be suggested to investigate all of these potential contributing factors in IDI and through analysis of DSS eligibility criteria to find the root cause of this influx of new young clients.

The stability in the 18-24 age group suggests consistent graduation of individuals into this age segment without significant fluctuations in birth rates about two decades ago.

The decrease in the proportion of adults aged 25-44 and 45-64, alongside the increase in seniors, suggests demographic shifts that could impact workforce compositions and retirement policies.

These trends are crucial for planning in various sectors, including education, workforce development, healthcare, and social services, as they indicate shifts in schooling needs, employment policies, and healthcare services.

#### Implications for Policy and Planning

Planning must adjust to accommodate the specific needs of rapidly growing numbers in the younger age groups.

Initiatives may need to be considered to make sure that the younger age group maintains to be supported as they age out of education. This might include mechanisms that ensure they do not cease to be supported according to their needs and through workforce initiatives can become contributing members of society.

Healthcare services will need to scale to meet the demands of an increasing disabled elderly population, which is growing both in numbers and as a proportion of the total.


---

## Population and Variables

### Population Groups

The SIA codes have the following population groups for which insights have been obtained:

- **DSS in Given Year**: Individuals who received DSS within the given year of the study. This group represents current users of services tailored for those with disabilities.
  
- **DSS in Past**: Individuals who have previously received DSS but did not receive them in the given year of the study. This group helps to track changes in service usage over time.
  
- **DSS Subgroup - Early Investment and Intervention**: This subgroup includes individuals receiving early investment services and interventions, focusing on early developmental support for younger individuals or those newly diagnosed.
  
- **DSS Subgroup - Facility-based Supports**: Individuals who receive support services that are facility-based. These are typically more intensive supports provided in specialized settings.
  
- **DSS Subgroup - Flexible Funding and Supports**: This subgroup includes individuals who receive flexible funding or supports, allowing for personalized accommodations to better meet their unique needs.
  
- **DSS Subgroup - Home and Community Supports**: Individuals who receive supports and services in their homes or community settings, promoting independence and integration into the community.
  
- **Non-DSS Disabled**: This group includes individuals who are disabled but do not receive Disability Support Services. The calculation of this group involves identifying individuals with disabilities through various health and welfare databases but who are not registered as users of DSS. This group is critical for understanding the broader scope of disabilities within the population and assessing unmet needs.
  
- **Rest of Population**: This group includes all other individuals in the population who do not fall into the above categories, serving as a control or comparison group for broader population studies.


### Variables

The dataset contains a broad range of variables that are categorised across several domains reflecting different aspects of socio-economic, demographic, health, justice, and housing conditions, among others.

The dataset contains a broad range of variables that are categorised across several domains reflecting different aspects of socio-economic, demographic, health, justice, and housing conditions among others. 

- **Demographics**: Variables like Region, Territorial Authority (TA), Urban/Rural classification, Male, Ethnicity (various categories, not prioritised). These variables provide basic demographic information about individuals.
  
- **Need**: This includes health and disability-related indicators such as Autism Spectrum Disorder, ADHD, Cerebral Palsy, Major Depressive Disorder, Schizophrenia, and conditions like Wheelchair dependence or Incontinence. It also includes ACC-related claims.
  
- **Socio-economic background**: Variables like Deprivation Index, Highest qualification, Total income, and Income bands, reflecting the socio-economic status of individuals.
  
- **Parent SES (Socio-Economic Status)**: Specific to the socio-economic conditions of parents, including their highest qualifications, income bands, main benefits, and wages/salary.
  
- **Housing**: Housing conditions such as In public housing, On social housing waitlist, living arrangements like Living with parents or grandparents, and Accommodation supplements.
  
- **Oranga Tamariki**: Variables related to child welfare and legal status, including whether a person or their child has had a care placement, is subject to a ROC (Report of Concern), or is under investigation.
  
- **Justice**: Involves indicators related to criminal offences, such as being a Victim or Offender of any/violent offences, and records of serving community or custodial sentences.
  
- **Health**: Broader health service engagement indicators like PHO enrolment, Disability Allowance, Child Disability Allowance, Job Seeker benefits for health/disability reasons, and support payments like the Supported Living Payment.

For detailed information, refer to the appendices where the variables and their descriptions are listed, and where differences between 2018 and 2021 variables are highlighted.

- [Data Dictionary](#appendix-a-data-dictionary)
- [Differences in Variables between 2018 and 2021](#appendix-b-differences-in-variables-between-2018-and-2021)

---

## Prevalence of Indicators

Below is an example about how the dataset can be used to track prevalence of indicator values in the DSS and total populations over time. 

<iframe src="https://datart.shinyapps.io/prevalenceappclean/" width="100%" height="600"></iframe>

### Let's look at an example

To query the data, select an **indicator group**, e.g. "Demographics". The select an **indicator**, e.g. "Ethnicity - Asian". Finally select a **value**. Here 1 means that the population belongs to the ethnic group Asian. 
Push the **Update** button to view the charts contrasting the proportion of Asian poopulation in the DSS and total population by age groups. The "Data Table" tab provides the same information in a table format. 

Based on the data you can obtain some insights about this population group. The key observations might include underrepresentation across all age groups: Asian individuals in the "DSS in Given Year" group are consistently underrepresented across all age groups compared to their prevalence in the total population. This suggests lower engagement or access to disability support services among the Asian population, potentially indicating cultural, linguistic, or systemic barriers.

### Age group analysis:

- **Children and adolescents (3-18):** In both 2018 and 2021, this age group shows a significant difference in prevalence compared to the general population, with a slightly narrower gap in 2021. However, the prevalence of Asian individuals in DSS services for this age group remains notably lower than in the total population.
- **Adults (19-44 and 45-64):** These age groups show the largest discrepancies in prevalence rates between those in DSS services and the total population. In 2021, the difference for the 19-44 age group is over 14%, indicating a significant gap in service access or use.
- **Elderly (65+):** While still underrepresented, the gap in prevalence for this group is relatively smaller compared to other age groups. This could suggest slightly better engagement or need recognition among older Asian individuals in DSS services, though still below population proportions.
- **Trends over time:** From 2018 to 2021, the prevalence of Asians in DSS services shows marginal improvements in the younger age groups but remains substantially lower than the total population levels. This persistently low engagement highlights the need for targeted interventions to improve access and inclusivity within disability support services for Asian communities.

---

# Phase 2: System Dynamics

System Dynamics Modelling involves capturing feedback processes, stocks and flows, time delays, and dynamic complexity in complex systems, aiming to understand how structures create system dynamics and generate policy resistance. It helps evaluate the consequences of new policies and designs through causal mapping and simulation modelling.
While System Dynamics Modelling encompasses a broader view of system behaviour and policy evaluation, Stock and Flow Modelling specifically centres around the interaction of stocks and flows in a system

*“Simulations are not tools to predict the future. Rather, they are virtual worlds or microworlds in which managers can develop decision-making skills, conduct experiments, and play.  Management flight simulators can be physical models, board games, or computer simulations. In systems with significant dynamic complexity, computer simulation will typically be needed.”*
[@Sterman2001]


## Core Concepts - Stocks and Flows

- **Stocks**: Represent the elements within a system that accumulate or deplete over time, reflecting the state of the system.
- **Flows**: The rates at which stocks increase or decrease, essentially defining how stocks change over time.

## Defining Stocks and Flows

### Stocks

- Current DSS Clients per Age Group: The number of individuals in each age group receiving DSS at any given time.

### Flows

- **Inflows**:
  - New Entrants: Individuals newly registered for DSS.
  - Returners: Individuals who previously left but have re-entered DSS.
  - Aging In: Individuals transitioning from the previous age group into the current one.

- **Outflows**:
  - Leavers: Individuals who exit DSS for any reason, including being deceased.
  - Aging Out: Individuals transitioning from the current age group to the next one.

```{r flow analysis setup, include=FALSE}
# Load necessary libraries
library(ggplot2)
library(gganimate)
library(readxl)
library(dplyr)
library(tidyr)
#library(gifski)
library(ggrepel)
library(extrafont)
library(networkD3)
library(htmlwidgets)

# Define the colors for the age groups
colors <- c("Age 0-03" = "#4A1532", "Age 03-10" = "#00cfe8", "Age 11-18" = "#ff006e", 
            "Age 19-25" = "#f95d6a", "Age 26-35" = "#ffa600", "Age 36-45" = "#bc5090", 
            "Age 46-65" = "#003f5c", "Age 66+" = "#58508d")

# Load and clean data
file_path_1 <- "Markov Chain Outputs 2024_06_13_corrected_for_release.xlsx"

total_pop_df <- read_excel(file_path_1, sheet = "Total DSS pop by age conf")
new_entrants_df <- read_excel(file_path_1, sheet = "New entrants conf")
returners_df <- read_excel(file_path_1, sheet = "Returning to DSS conf")
leavers_df <- read_excel(file_path_1, sheet = "Leavers conf")

# Replace "S" with 0 in returners_df
returners_df <- returners_df %>%
  mutate(across(everything(), ~ifelse(. == "S", 0, .)))

# Convert appropriate columns to numeric
returners_df$returning <- as.numeric(returners_df$returning)

# Combine datasets
new_entrants_df$category <- "New Entrants"
returners_df$category <- "Returners"
leavers_df$category <- "Leavers"
total_pop_df$category <- "Total Population"

# Select common columns and combine
common_cols <- c("age_group", "refyr", "value", "category")

new_entrants_df <- new_entrants_df %>% 
  rename(value = `Sum of new_entrants`) %>% 
  select(age_group, refyr, value, category) %>% 
  mutate(value = as.numeric(value)) %>%
  filter(refyr >= 2011)

leavers_df <- leavers_df %>% 
  rename(value = leavers) %>% 
  select(age_group, refyr, value, category) %>% 
  mutate(value = as.numeric(value))

total_pop_df <- total_pop_df %>% 
  rename(value = total_pop) %>% 
  select(age_group, refyr, value, category) %>% 
  mutate(value = as.numeric(value))

returners_df <- returners_df %>% 
  rename(value = returning) %>% 
  select(age_group, refyr, value, category) %>% 
  mutate(value = as.numeric(value))

combined_df <- bind_rows(new_entrants_df, returners_df, leavers_df, total_pop_df)

# Plotting function with custom colors and grouped bar plots with facets
plot_data <- function(data, title) {
  ggplot(data, aes(x = factor(refyr), y = value, fill = age_group)) +
    geom_bar(position = position_dodge(width = 0.9), stat = "identity") +
    facet_grid(~ age_group) +
    scale_fill_manual(values = colors) +
    labs(title = title,
         x = "Year",
         y = "Count",
         fill = "Age Group") +
    theme_bw() +
    theme(
      legend.title = element_blank(), 
      legend.position = "bottom",
      axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
      axis.title.x = element_blank(),
      axis.title.y = element_text(face = "bold"),
      axis.ticks.x = element_blank(),
      axis.ticks.y = element_blank(),
      panel.background = element_blank(),
      panel.grid.minor = element_blank(),
      panel.grid.major = element_blank())
}

# Create plots
p_new_entrants <- plot_data(new_entrants_df, "New Entrants into DSS")
p_returners <- plot_data(returners_df, "Returners to DSS")
p_leavers <- plot_data(leavers_df, "Leavers from DSS")
p_total_pop <- plot_data(total_pop_df, "Total DSS Population")

# Combine data with a new column for category
combined_df <- bind_rows(
  new_entrants_df %>% mutate(category = "New Entrants"),
  returners_df %>% mutate(category = "Returners")
)

# Calculate the "Others" category
total_others <- total_pop_df %>%
  left_join(new_entrants_df, by = c("age_group", "refyr"), suffix = c("_total", "_new")) %>%
  left_join(returners_df, by = c("age_group", "refyr")) %>%
  mutate(
    value_new = ifelse(is.na(value_new), 0, value_new),
    value = ifelse(is.na(value), 0, value),
    value_others = value_total - value_new - value
  ) %>%
  select(age_group, refyr, value = value_others) %>%
  mutate(category = "Others")

# Combine all data
final_combined_df <- bind_rows(combined_df, total_others)

# Define the colors for the categories
colors_combined <- c("New Entrants" = "#00cfe8", "Returners" = "#ff006e", "Others" = "#4A1532")

# Plotting function with custom colors for combined data
plot_combined_data <- function(data, title) {
  ggplot(data, aes(x = factor(refyr), y = value, fill = category)) +
    geom_bar(stat = "identity") +
    facet_grid(~ age_group) +
    scale_fill_manual(values = colors_combined) +
    labs(title = title,
         x = "Year",
         y = "Count",
         fill = "Category") +
    theme_bw() +
    theme(legend.title = element_blank(), 
          legend.position = "bottom",
          axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
          axis.title.x = element_blank(),
          axis.title.y = element_text(face = "bold"),
          axis.ticks.x = element_blank(),
          axis.ticks.y = element_blank(),
          panel.background = element_blank(),
          panel.grid.minor = element_blank(),
          panel.grid.major = element_blank())
}

# Create combined plot
p_combined <- plot_combined_data(final_combined_df, "Combined DSS Data: New Entrants, Returners, and Others")

```

#### Analysis of stocks and flows

Below are the charts showing different aspects of the DSS population data: new entrants, leavers, returners (those who were DSS clients, left and returned during the time period 2010-2021). Note, that leavers are those who left DSS for any reason, including being deceased. 

:::{.panel-tabset}
```{r results='asis', echo=FALSE, warning=FALSE}
# Define the plots and their titles
plot_list <- list(p_new_entrants, p_returners, p_leavers, p_combined)
headings <- c("New Entrants", "Returners", "Leavers", "Combined DSS Data")

# Use a loop to generate the headings and insert plots
for (i in seq_along(plot_list)) {
  cat("### ", headings[i], "\n\n")
  print(plot_list[[i]])
  cat('\n\n')
}
```
:::

##### Observations

- **New Entrants**
The graph shows a marked an increase in the number of new entrants, particularly in the age groups 0-4, 5-12, 13-17. The 5-12 age group demonstrates the most substantial rise from around 2015. This trend suggests a growing younger population group entering the DSS.

- **Returners**
In the "Returners to DSS" graph, the age groups 18-24 and 25-44 have the highest number of returners. The 18-24 age group shows a steady increase in returners over time, peaking around 2018-2020. This could indicate that young adults are returning to the DSS, possibly after initially leaving the service. The age group 25-44 also displays a consistent rise, suggesting that adults in this demographic are returning to DSS, likely due to ongoing or recurrent needs.
Please, consider that returners are defined as those, who were part of DSS 2010-2021, left and then returned and thus those who were DSS clients and left before 2010 and returned after 2010, are defined as "new entrants". Therefore, teh figures displayed may underestimate the true number of returners.  

- **Leavers**
The "Leavers from DSS" graph indicates that the age group 45-64 has the highest number of leavers. The 65+ age group shows a peak around 2016, followed by a decline. Leavers include those, leaving due to being deceased. Lower rates of leavers in the 65+ group indicates that the population is living longer. 

- **Combined DSS Data**
The "Combined DSS Data: New Entrants, Returners, and Others" graph provides a comprehensive view of the DSS population dynamics. It highlights the significant contributions of new entrants and very small contribution of returners across different age groups. The age group 5-12 shows a considerable increase in new entrants, particularly post-2015. It also shows that new entrants cause the shape of the bimodal distribution, i.e. most new entrants enter around the age 5-12 or 45-65.The 25-44 and 45-64 age groups also show an increase of new entrants and returners, indicating dynamic movements in and out of the DSS system for these age ranges. The data underlines the importance of focusing on both new entrants to understand the overall trends in DSS service use.

For detailed information, refer to [Appendix C](#appendix-c) where the number of new entrants, returners, leavers, and total DSS population is displayed.


You can interact with the Insight Maker model embedded below:

<iframe src="https://insightmaker.com/insight/elL0WWiBgIx1EW0lYLL5c/embed?topBar=1&sideBar=1&zoom=1" title="Embedded model" width="800" height="600"></iframe>

### Notes:

System dynamics is a powerful modeling methodology developed by Jay Forrester at MIT, designed to handle the complexities of interconnected systems across various disciplines. This approach combines insights from both social and physical systems to provide a structured way of understanding and predicting dynamics within any system.

---

# Phase 3 – Markov Chain Modelling

## Markov Chain Modelling of Transition Probabilities

### Purpose:

- Defining states and probabilities
- Can be used for simulation

### What is Markov Chain Modelling?

Markov Chain Modelling involves the use of state-based models where the next state depends only on the current state and not on the sequence of events that preceded it. This characteristic makes it incredibly useful for modelling a variety of real-world processes that conform to these conditions.

**Predictive Power:** Markov chains are especially powerful in environments where future states are a probabilistic function of the current state. This makes them ideal for modelling scenarios where decisions or outcomes are sequential and stochastic in nature.

**Application in Health and Social Sciences:** In health and social sciences, Markov models can predict the progression of diseases or conditions through different stages over time, allowing for the analysis of interventions and long-term outcomes in a dynamic framework.

**Policy Simulation and Evaluation:** Markov models provide a framework for simulating the effects of different policy interventions, helping policymakers understand potential impacts before implementation. This is particularly valuable in dynamic systems where conditions evolve over time.

**Utility in Complex Systems:** Due to their simplicity and robustness, Markov chains are used to model complex systems in a manageable way, providing insights into system behaviour with clear, probabilistic descriptions of possible future states.

### Defining States and Probabilities

In the context of Markov Chain Modelling, we have defined several mutually exclusive states for individuals based on their transitions within the DSS system. Each state represents a specific condition or status that an individual can be in during a given period. The definitions and rules for these states are as follows:

#### State Definitions

- **NOT BORN YET**: This state is assigned if the individual's age is less than 0.
- **DECEASED**: This state is assigned if the individual is deceased (when DECEASED = 1 or ALIVE = 0).
- **DSS**: This state is assigned if the individual is active in the DSS system (dss_active = 1) and not involved in any other recorded categories (CORR, EMPLOYED, HOSPITAL, OVERSEAS, T1, T2, EDU, OT = 0).
- **NO DATA**: This state is assigned if the individual is alive but not active in the DSS system and not involved in any other recorded categories.
- **CORR**: Interaction with the Corrections system
- **EMPLOYED**: Employment status
- **HOSPITAL**: Hospitalisation
- **OVERSEAS**: Time spent overseas
- **T1**: Main benefit category, (e.g., Jobseeker Support, Sole Parent Support)
- **T2**: Supplementary benefit receipt
- **EDU**: Education status
- **OT**: Interaction with Oranga Tamariki

#### Combined States

When the individual is active in DSS and involved in other categories, the state is constructed by combining 'DSS_' with other states. The code checks the duration of involvement in each category and combines the top two states with the most significant duration.

##### Conditions for Combined States

- If the individual has been overseas for more than 180 days, the state becomes **'DSS_OVERSEAS'**.
- If hospitalized for more than 30 days, the state becomes **'DSS_HOSPITAL'**.
- If involved in any of the main categories (CORR, EMPLOYED, T1, T2, EDU) for more than 180 days, the top two categories are combined with **'DSS_'**.

##### Example States

- **'DSS_EMPLOYED_T1'**: Active in DSS, Employed for more than 180 days, and also recipient of T1 benefit for at least 180 days.
- **'DSS_HOSPITAL'**: Active in DSS and hospitalized for more than 30 days.
- **'DSS_NO_DATA'**: Active in DSS but no significant involvement in other categories.
- **'DECEASED'**: The individual is deceased.

#### State Duration

- To qualify for a specific state, an individual must spend at least 180 days (roughly half a year) in that state within a given year.
- This rule ensures that temporary or short-term transitions do not significantly impact the state classification.

#### Combined States

- In cases where an individual meets the criteria for more than one state (e.g., splitting time between Education and Employment), they are classified into combined states.
- These combined states are also required to meet the 180-day rule for each constituent state.

#### Categorization into "Other"

- Any combinations or conditions that do not clearly fit into the predefined states or combined states are grouped into the "Other" category.
- This includes uncommon or less frequent transitions and combinations of activities.

By defining the states in this manner, we ensure that each state is representative of a significant and stable condition in an individual's life, allowing for more accurate modeling and analysis of transitions over time.

This approach simplifies the complexity of individuals' transitions within the DSS system and provides a clear framework for understanding and predicting future states based on current conditions.


---

## Most Common Transitions


```{r clean and transform Markov Chain data, include=FALSE}
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(readxl)
library(tidyr)
library(knitr)

# Load the transition counts and population data
transition_counts <- read_excel("Markov Chain Outputs 2024_06_13_corrected_for_release.xlsx", sheet = "Transition counts 2011-20 conf", skip=1)
transition_counts_2021 <- read_excel("Markov Chain Outputs 2024_06_13_corrected_for_release.xlsx", sheet = "Transition counts 2021 conf", skip=1)

# Function to clean transition counts data
clean_transition_data <- function(df) {
  df %>%
    mutate(across(-c(age_groups, from_state), ~ replace(., . == "S", 0))) %>%
    mutate(across(-c(age_groups, from_state), as.numeric)) %>%
    filter(!grepl("Total", age_groups)) %>%
    select(-`Grand Total`)
}

# Clean the data
transition_counts <- clean_transition_data(transition_counts)
transition_counts_2021 <- clean_transition_data(transition_counts_2021)

# Transform the transition counts data to a long format
transition_counts_long <- transition_counts %>%
  pivot_longer(cols = -c(age_groups, from_state), names_to = "to_state", values_to = "count") %>%
  filter(!is.na(count))

transition_counts_2021_long <- transition_counts_2021 %>%
  pivot_longer(cols = -c(age_groups, from_state), names_to = "to_state", values_to = "count") %>%
  filter(!is.na(count))

# Compute transition probabilities
transition_probabilities <- transition_counts_long %>%
  group_by(age_groups, from_state) %>%
  summarise(total_count = sum(count), .groups = 'drop') %>%
  left_join(transition_counts_long, by = c("age_groups", "from_state")) %>%
  mutate(probability = count / total_count) %>%
  select(age_groups, from_state, to_state, probability)

# Transform the transition counts data to a long format
transition_counts_long <- transition_counts %>%
  pivot_longer(cols = -c(age_groups, from_state), names_to = "to_state", values_to = "count") %>%
  filter(!is.na(count))

transition_counts_2021_long <- transition_counts_2021 %>%
  pivot_longer(cols = -c(age_groups, from_state), names_to = "to_state", values_to = "count") %>%
  filter(!is.na(count))

# Define the colors for the age groups
colors <- c("Age 0-04" = "#4A1532", "Age 05-12" = "#00cfe8", "Age 13-17" = "#ff006e", 
            "Age 18-24" = "#f95d6a", "Age 25-44" = "#ffa600", "Age 45-64" = "#bc5090", 
            "Age 65+" = "#003f5c")

```

```{r transition plotting function, include=FALSE}
library(kableExtra)
library(dplyr)
library(ggplot2)
library(tidyr)

# Assuming transition_counts_long is already created as before

create_transition_table <- function(df, age_group) {
  # Filter the dataset for the specified age group
  transitions <- df %>%
    filter(age_groups == age_group)
  
  # Calculate total transition counts for the age group
  total_count <- sum(transitions$count, na.rm = TRUE)
  
  # Identify most common transitions within DSS
  common_dss <- transitions %>%
    filter(grepl("^DSS", from_state) & grepl("^DSS", to_state)) %>%
    arrange(desc(count)) %>%
    head(5) %>%
    mutate(percentage = count / total_count * 100)
  
  # Identify most common transitions from DSS to non-DSS states
  common_dss_to_non_dss <- transitions %>%
    filter(grepl("^DSS", from_state) & !grepl("^DSS", to_state)) %>%
    arrange(desc(count)) %>%
    head(5) %>%
    mutate(percentage = count / total_count * 100)
  
  # Ensure both types of transitions are combined and not empty
  result <- bind_rows(
    common_dss %>% mutate(transition_type = "Within DSS"),
    common_dss_to_non_dss %>% mutate(transition_type = "DSS to non-DSS")
  )
  
  # Plotting
  ggplot(result, aes(x = reorder(paste(from_state, "->", to_state), percentage), y = percentage, fill = transition_type)) +
    geom_bar(stat = "identity", position = "dodge") +
    geom_text(aes(label = sprintf("%.1f%%", percentage)), 
              position = position_dodge(width = 0), 
              hjust = 0.4, 
              size = 2.5) +
    coord_flip() +
    labs(title = paste("Top 5 DSS Transitions by Percentage for Age Group:", age_group),
         x = "Transition",
         y = "Percentage of Total Transitions",
         fill = "Transition Type") +
    theme_minimal(base_size = 10) +
    theme(
      plot.title = element_text(hjust = 0.5, size = 12),  # Left align the title
      plot.margin = margin(5, 5, 5, 5),  # Adjust plot margin
      axis.text = element_text(size = 8),  # Increase axis text size
      axis.title = element_text(size = 8)  # Increase axis title size
    ) +
    scale_fill_manual(values = c("Within DSS" = "#ff006e", "DSS to non-DSS" = "#00cfe8")) 
}


```

# Phase 3 – Markov Chain Modelling

## Most Common Transitions from DSS Year-to-Year (2010-2020)

### Explanation

This section displays the most common year-to-year transitions for the DSS population from 2010 to 2020.


:::{.panel-tabset}
```{r results='asis', echo=FALSE, warning=FALSE}
# Define the plots and their titles
plot_list <- list(create_transition_table(transition_counts_long, "Age 0-04"),
                create_transition_table(transition_counts_long, "Age 05-12"),
                create_transition_table(transition_counts_long, "Age 13-17"),
                create_transition_table(transition_counts_long, "Age 18-24"),
                create_transition_table(transition_counts_long, "Age 25-44"),
                create_transition_table(transition_counts_long, "Age 45-64"),
                create_transition_table(transition_counts_long, "Age 65+")
)
headings <- c(
"Top 5 Transitions for Age Group: Age 0-4",
"Top 5 Transitions for Age Group: Age 5-12",
"Top 5 Transitions for Age Group: Age 13-17",
"Top 5 Transitions for Age Group: Age 18-24",
"Top 5 Transitions for Age Group: Age 25-44",
"Top 5 Transitions for Age Group: Age 45-64",
"Top 5 Transitions for Age Group: Age 65+"
)

# Use a loop to generate the headings and insert plots
for (i in seq_along(plot_list)) {
  cat("### ", headings[i], "\n\n")
  print(plot_list[[i]])
  cat('\n\n')
}
```
:::

### Notes:

The table is from the preliminary analysis of transition rates. It illustrates the transitions between various mutually exclusive states for individuals from the DSS system within the age group 18-24 over the decade from 2011 to 2020. This data helps identify the most common pathways taken by young adults receiving Disability Support Services and can highlight areas where intervention and support might be adjusted to better serve this population.

---

# Planned Next Steps

1. **Marianna to gather feedback on what would be useful to obtain from IDI as a final dataset.**
   - Specifying the subset of variables and population characteristics. Questions include:
     - Are the population groups defined best suited for your decision making? Should it be simplified or changed? (Refer to the [Population](#population) section)
     - Are the additional dimensions adequate? The population is subsequentioned to large age bands, i.e., 3-18, 19-44, 45-64, 65+. Would narrower age bands, or additional dimensions (e.g., ethnicity, deprivation index, region), be helpful?
     - **Variables**: Are the need variables the list you are looking for? Should rare diseases be included? Is there a pre-defined health alignment and functional disabilities list that best aligns with what Manawanui needs?
     - Some variables could be better defined, i.e., highest qualification of parent 1 and parent 2 should be merged, income should possibly be banded into quartiles or quintiles to better adapt to increasing income as time passes. Are there any other observations regarding the usefulness of variables?

2. **Validating with Manawanui and potentially with Whakaha (through Marsha facilitating) a desired dataset for regular outputting.**

3. **Creating typical pathways of DSS clients over a period of time of about 13 years.** 
   This limitation is due to data quality of the SOCRATES dataset in IDI. "The dataset runs from approximately 2002/03 onwards, but data from 2010 onwards are most reliable. Records prior to 2010 have been migrated from other sources" [@Esplin2016]. The method used will be based on representative timelines methodology as described in [@Pekar2021].

---

# THANK YOU

Marianna Pekar  
021-131-9793  
Marianna.Pekar@gmail.com

---

### References

::: {#refs}
:::

---

# Appendices

## Appendix A: Data Dictionary
Based on definitions provided by SIA (Andrew Webber and Craig Wright)

```{r data-dictionary, include=TRUE, echo=FALSE}
library(readxl)
library(dplyr)

# Load data dictionary
data_dictionary_path <- "C:/Users/maria/OneDrive/Asztali gép/Work/Manawanui/Descriptives/manawanui_output1_total_for_release.xlsx"
data_dictionary <- read_excel(data_dictionary_path, sheet = "Data dictionary")

# Display data dictionary
knitr::kable(data_dictionary)
```

## Appendix B: Differences in Variables between 2018 and 2021

```{r variable-diff, include=TRUE, echo=FALSE}
# Extract unique indicators for each year and category
indicators_2018 <- data_2018 %>%
  select(indicator_category, indicator) %>%
  distinct() %>%
  arrange(indicator_category, indicator)

indicators_2021 <- data_2021 %>%
  select(indicator_category, indicator) %>%
  distinct() %>%
  arrange(indicator_category, indicator)

# Find differences
indicators_only_in_2018 <- anti_join(indicators_2018, indicators_2021, by = c("indicator_category", "indicator"))
indicators_only_in_2021 <- anti_join(indicators_2021, indicators_2018, by = c("indicator_category", "indicator"))

# Prepare a summary data frame
differences <- list(
  Only_in_2018 = indicators_only_in_2018,
  Only_in_2021 = indicators_only_in_2021
)

# Display differences
knitr::kable(differences$Only_in_2018, caption = "Variables Only in 2018")
knitr::kable(differences$Only_in_2021, caption = "Variables Only in 2021")

```
## Appendix C: Datasets for Download

### Explanation

1. **Preview Data**: The first 10 rows of each dataset are displayed.
2. **Download Links**: The `[Download SWA Dataset (merged_data)](merged_data.csv)` and `[Download DSS Population Data (data)](data.csv)` provide links to download the full datasets.

### SWA Dataset (Merged Data: 2018 and 2021)

```{r merged-data-preview, echo=FALSE}
library(dplyr)

# Preview the first 10 rows of the merged data
merged_data_preview <- head(merged_data, 10)

# Display the preview
knitr::kable(merged_data_preview)

```


### DSS Population Numbers by Ages and Age Groupings

```{r age group data-preview, echo=FALSE}
library(knitr)

# Preview the first 10 rows of the DSS population data
data_preview <- head(data, 10)

# Display the preview
kable(data_preview)
```

### DSS Population by New Entrants, Returners, Leavers and Total


```{r new entr returner leaver data-preview, echo=FALSE}
# Preview the first 10 rows of the combined dataset
combined_data_preview <- head(final_combined_df, 10)

# Display the preview
knitr::kable(combined_data_preview)

```


